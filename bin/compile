#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

echo "Compilation of R buildpack..."
echo "by RAW21...."


# ### another way
# curl -O http://cran.utstat.utoronto.ca/src/base/R-3/R-3.2.1.tar.gz
# tar xzvf R-3.2.1.tar.gz
# cd R-3.2.1
# ./configure
# make
# make check
# cd ..
# rm -f R Rscript
# ln -s R-3.2.1/bin/R R
# ln -s R-3.2.1/bin/Rscript Rscript
# echo "R successfully installed" | indent
# ###


# ### an another way
# curl -O https://github.com/nafiux/portableR/tarball/master | tar xzvf - -C .
# ls
# echo "R should be here..."
# ###


###
# fail fast
set -e

# debug
# set -x

shopt -s extglob

function error() {
  echo " !     $*" >&2
  exit 1
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function read_var() {
  echo $(head -n 1 $1)
}

# clean up leaking environment
unset GIT_DIR

# parse and derive params
BUILD_DIR=$1
CACHE_DIR="$2/vendor"
LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"
GCC_VERSION=4.8

# config

R_VERSION="3.2.0" #"3.2.1"
BUILD_PACK_VERSION="20150719-0018" #"20151119-2338"

R_BINARIES="https://raw.githubusercontent.com/RAW21/R_binary/master/R-3.2.0-binaries-20150719-0018.tar.gz"

VENDOR_DIR="$BUILD_DIR/vendor"
CRAN_MIRROR="http://cran.revolutionanalytics.com"

mkdir -p $CACHE_DIR

# # vendor R into the slug
# echo "Vendoring R $R_VERSION for $STACK stack ($BUILD_PACK_VERSION)" | indent
echo "Vendoring R $R_VERSION ($BUILD_PACK_VERSION)" | indent

# download and unpack binaries
echo "Downloading and unpacking R binaries ($R_BINARIES)" | indent
curl $R_BINARIES -s -o - | tar xzf - -C $BUILD_DIR

# checkig the downloaded folder structure
echo "printing the folder structure"
# ls
find .

# also using buildpack-apt?
echo "checking for first if"
if [ -d $BUILD_DIR/.apt ]; then
  cp -r $VENDOR_DIR/.apt/ $BUILD_DIR
else
  mv $VENDOR_DIR/.apt/ $BUILD_DIR
fi

# need to copy the binaries to /app/vendor so that R works when compiling packages
echo "copying the binaries to /app/vendor"
mkdir -p /app/.apt
cp -R $BUILD_DIR/.apt/* /app/.apt

mkdir -p /app/vendor/R
cp -R $VENDOR_DIR/R/* /app/vendor/R

# trialed and errored on this; copy over libs to gfortran, so
# that liblto_plugin.so and others can be found
# (tried using LDFLAGS, LD_LIBRARY_PATH and LIBRARY_PATH but didn't work)
echo "doing something with gcc"
cp -R /usr/lib/gcc/x86_64-linux-gnu/$GCC_VERSION/* /app/.apt/usr/lib/gcc/x86_64-linux-gnu/$GCC_VERSION
# cp /usr/lib/gcc/x86_64-linux-gnu/$GCC_VERSION/liblto_plugin.so /app/.apt/usr/lib/gcc/x86_64-linux-gnu/$GCC_VERSION/liblto_plugin.so

# set environment variables, needed for compiling packages
echo "sourcing the r_environment.sh"
source "$BUILDPACK_DIR/bin/r_environment.sh"

# copy over environment
echo "copying that to proper place"
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/r_environment.sh" "$BUILD_DIR/.profile.d/r_environment.sh"

# prevent warnings when building packages
echo "doing something that will prevent R warnings here..."
mkdir -p /app/vendor/R/lib64/R/doc/html
touch /app/vendor/R/lib64/R/doc/html/R.css

# install dependencies from CRAN
echo "... Executing init.r script ..." | indent

# set the CRAN mirror and run the init.r program
/app/vendor/R/bin/R -s <<RPROG > indent
  Sys.setenv(BUILD_DIR="$BUILD_DIR")
  setwd("$BUILD_DIR")
  r <- getOption("repos");
  r["CRAN"] <- "$CRAN_MIRROR";
  options(repos=r);
  `cat $BUILD_DIR/init.r`
RPROG

echo "R $R_VERSION successfully installed" | indent

# need to copy binaries back so that any
# installed packages are included in the slug
rm -rf $VENDOR_DIR/R
mkdir -p $VENDOR_DIR/R
cp -R /app/vendor/R/* $VENDOR_DIR/R
